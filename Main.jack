
/******************************************************************************************** 
Initiates a BREAKOUT session by accepting some game parameters from the user and
instantiating a Controller to begin a new game.
When the game ends, we report back whether it was a win or not, and then give the user
the option to play again.

This game could have been made highly configurable.  For example, the user could have options
to choose things like the size of the bricks, the width and height of the wall, the size of 
the ball, the number of balls, etc.  But ultimately I had to limit the scope, so I chose
just 2 configuration parameters: delay (speed of game), and paddle width.
With the right combination of these parameters, the user ought to be able to find the 
right level of challenge.

Note to Tester:  If you would like to see how the game plays out to the end,
choose a paddle width of 511 (whole screen) and a low delay, like zero.
********************************************************************************************/

class Main {

    function void main() {
        var Controller controller;  
	var int paddleWidth, delay;	
	var String message;
	var char key;	
	var boolean gameWon, newGame;

	let newGame = true;
	while (newGame) {
	   do Printer.showMessage(0, "BREAKOUT!");
	   do Printer.showMessage(2, "Try to destroy the wall by bouncing the ball off it.");
	   do Printer.showMessage(4, "Use the left and right arrow keys to move the paddle.");
	   do Printer.showMessage(6, "The ends of the paddle impart a steeper angle to the ball.");
	   do Printer.showMessage(8, "The game ends when the wall is gone, or you use up 3 balls.");
	   do Printer.showMessage(10, "Press any key to continue.");	

	   do Main.waitForKey();
	   do Screen.clearScreen();
	   do Sys.wait(500);

	   do Output.moveCursor(0,0);
	   let message = "Enter integer between 10 and 511 for paddle width (try 100)";
	   let paddleWidth = Keyboard.readInt(message);
	   do Output.moveCursor(2,0);
	   let message = "Enter integer between 0 and 50 for delay (try 20)";
	   let delay = Keyboard.readInt(message);
	   do message.dispose();

	   do Screen.clearScreen();
	   do Printer.showMessage(0, "Press any key to begin");	
	   do Main.waitForKey();
	   
	   do Screen.clearScreen();
    	   let controller = Controller.new(paddleWidth, delay);
	   let gameWon = controller.play();     
	   do controller.dispose();

	   let message = "Sorry, the game is over";
	   if (gameWon) {
	      let message = "YOU WIN!!!";
	   }
	   do Printer.showMessage(0, message);
	   do Printer.showMessage(2, "Play Again?  Hit y for Yes, n for No");
	   let key = 0;
	   while (~((key = 78) | (key = 89))) {
	      let key = Main.waitForKey();
	   }
	   if (~(key = 89)) {
  	      let newGame = false;
	   }
	}
	do Screen.clearScreen();
	do Printer.showMessage(0, "GOODBYE!");
	do Sys.wait(1000);
      	return;
    }

    function char waitForKey() {
       var char k;
       let k = 0;
       while (k = 0) {
          let k = Keyboard.keyPressed();
       }
       return k;
    }

}
